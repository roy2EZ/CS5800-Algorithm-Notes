Coin Change
Description
Assume we have coins like 
d1 = 1, d2 = 5, d3 = 10, d4 = 25
If we have to get total = 3.37$, what's the minimum number of coins do we have to pick?
Naive approach
f(i) = min(
    f(i - d[k]) + 1,
    f(i - d[k-1]) + 1,
    ...
    f(i - d[1]) + 1,
)
PseudoCode
int coinChange(int[] d, int n) {
    int[] dp = new int[n+1];
    for (int i = 1; i <= n; i++) {
        dp[i] = i;
        for (int j = 0; j < d.length; j++)  {
            if (d[i] <= i) {
            dp[i] = Math.min(dp[i], dp[i-d[k]] + 1);
            }
        }
    }
    return dp[n];
}
